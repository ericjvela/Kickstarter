gc()
#reads in data into KickStar
KickStar <- read.csv("C:/Users/ericv/OneDrive/Documents/MGSC310/ks-projects-201612.csv")
#removing a few columns with null values
KickStar <- subset(KickStar, select = -c(14,15,16,17))
colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$name),]
colSums(is.na(KickStar))
#cleaning up category column
KickStar$category <- factor(KickStar$category, levels = c("Zines","Young Adult", "World Music", "Workshops" ,"Woodworking", "Webseries", "Webcomics", "Web","Weaving", "Wearables", "Video Games", "Video Art", "Video", "Vegan", "Typography", "Translations", "Thrillers", "Theater", "Textiles", "Television", "Technology", "Taxidermy", "Tabletop Games", "Stationery", "Spaces", "Space Exploration", "Sound", "Software", "Small Batch", "Shorts", "Sculpture", "Science Fiction", "Romance", "Rock", "Robots", "Restaurants", "Residencies", "Ready-to-wear", "Radio & Podcasts", "R&B", "Quilts", "Puzzles", "Punk", "Publishing", "Public Art", "Product Design", "Printing", "Print", "Pottery", "Pop", "Poetry", "Plays", "Playing Cards", "Places", "Photography", "Photobooks", "Photo", "Pet Fashion", "Periodicals", "Performances", "Performance Art", "People", "Painting", "Nonfiction", "Nature", "Narrative Film", "Musical", "Music Videos", "Music", "Movie Theaters", "Mobile Games", "Mixed Media", "Metal", "Makerspaces", "Live Games", "Literary Journals", "Letterpress", "Latin", "Knitting", "Kids", "Journalism", "Jewelry", "Jazz", "Interactive Design", "Installations", "Indie Rock", "Immersive", "Illustration", "Horror", "Hip-Hop", "Hardware", "Graphic Novels", "Graphic Design", "Glass", "Gaming Hardware", "Games", "Gadgets", "Footwear", "Food Trucks", "Food", "Flight", "Fine Art", "Film & Video", "Fiction", "Festivals", "Fashion", "Farms", "Farmer's Markets", "Fantasy", "Family", "Faith", "Fabrication Tools", "Experimental", "Events", "Embroidery", "Electronic Music", "Drinks", "Drama", "Documentary", "DIY Electronics", "DIY", "Digital Art", "Design", "Dance", "Crochet", "Crafts", "Couture", "Country & Folk", "Cookbooks", "Conceptual Art", "Community Gardens", "Comics", "Comic Books", "Comedy", "Classical Music", "Civic Design", "Chiptune", "Childrenswear", "Children's Books", "Ceramics", "Candles", "Camera Equipment", "Calendars", "Blues", "Bacon", "Audio", "Art Books", "Art", "Architecture", "Apps", "Apparel", "Anthologies", "Animation", "Animals", "Action", "Accessories", "Academic", "3D Printing"))
colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$category),]
colSums(is.na(KickStar))
#cleaning main_category column
table(KickStar$main_category)
KickStar$main_category <- factor(KickStar$main_category, levels = c("Theater", "Technology", "Publishing", "Photography", "Music", "Journalism", "Games", "Food", "Film & Video", "Fashion", "Design", "Dance", "Crafts", "Comics", "Art"))
colSums(is.na(KickStar))
#clearning currency column
table(KickStar$currency)
KickStar$currency <- factor(KickStar$currency, levels = c("USD", "SGD", "SEK", "NZD", "NOK", "MXN", "HKD", "GBP", "EUR", "DKK", "CHF", "CAD", "AUD"))
colSums(is.na(KickStar))
#cleaning goal column
KickStar$goal <- as.numeric(KickStar$goal)
colSums(is.na(KickStar))
#cleaning pledge column
KickStar$pledged <- as.numeric(KickStar$pledged)
#cleaning state column
table(KickStar$state)
KickStar$state <- factor(KickStar$state, levels = c("failed", "successful", "canceled", "live", "undefined", "suspended"))
colSums(is.na(KickStar))
#cleaning backers column
KickStar$backers <- as.numeric(KickStar$backers)
colSums(is.na(KickStar))
#cleaning country column
table(KickStar$country)
KickStar$country <- factor(KickStar$country, levels = c("US", "SG", "SE", "NZ", "NO", "NL", "MX", "LU", "IT", "IE", "HK", "GB", "FR", "ES", "DK", "DE", "CH", "CA", "BE", "AU", "AT"))
colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$country),]
colSums(is.na(KickStar))
#cleaning usd.pledged column
KickStar$usd.pledged <- as.numeric(KickStar$usd.pledged)
colSums(is.na(KickStar))
#gets summary of data
summary(KickStar)
#install.packages("ggplot2")
library(ggplot2)
#ggplot of Goal Amount and Pledge Amount by state of company
ggplot(data = KickStar, aes(goal, pledged)) + geom_smooth() + facet_wrap(~state) + labs(title = "Smooth Plot of Goal vs Pledge Amount by State of Company") + labs(x = "Goal Amount", y = "Pledge Amount")
#ggplot of Goal Amount and Pledge Aamount by country
ggplot(data = KickStar, aes(goal, pledged)) + geom_smooth() + facet_wrap(~country) + labs(title = "Smooth Plot of Goal vs Pledge Amount by Country") + labs(x = "Goal Amount", y = "Pledge Amount")
#ggplot of bar graph with type of currency and the amount pledged
ggplot(data = KickStar, aes(x = currency, y = usd.pledged)) + geom_bar(stat = "identity") + labs(x = "Type of Currency", y = "Amount of $ Pledged") + labs(title = "Amount Pledged by Currency")
##ggplot of bar graph of count of each categories
ggplot(data = KickStar, aes(category)) + geom_bar() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = "Count of Categories", x = "Categories", y = "Count")
#ggplot of bar graph of count by state
ggplot(data = KickStar, aes(state)) + geom_bar() + labs(title = "Counts per State")
#if failed, then 1, else 0
KickStar$binomState <- ifelse(KickStar$state == "failed",1,0)
set.seed(1861)
trainSize <- 0.75
trainInd <- sample(1:nrow(KickStar), size = floor(nrow(KickStar) * trainSize))
KickTrain <- KickStar[trainInd, ]
KickTest <- KickStar[-trainInd, ]
glmmod <- glm(binomState ~ goal + pledged + backers + usd.pledged + main_category + currency + country, data = KickTrain, family = binomial)
summary(logitFit)
summary(glmmod)
plot(glmmod)
glmmodTrain <- glm(binomState ~ goal + pledged + backers + usd.pledged + main_category + currency + country, data = KickTrain, family = binomial)
summary(glmmodTrain)
exp(glmmodTrain$coefficients)
plot(glmmodTrain)
glmTrainProbs <- predict.glm(glmmodTrain, type = "response")
hist(glmTrainProbs)
contrasts(KickStar$binomState)
KickStar$state <- factor(KickStar$state, levels = c("failed", "successful", "canceled", "live", "undefined", "suspended"))
contrasts(KickStar$binomState)
names(KickStar$binomState)
table(KickStar$binomState)
table(KickStar$binomState)
glmTrainPreds <- rep("Not Fail", nrow(KickTrain))
glmTrainPreds[glmTrainProbs > 0.5] <- "Fail"
conftab <- table(glmTrainPreds, true = KickTrain$binomState)
print(conftab)
TPtrain <- conftab[2, 2]/(conftab[1, 2] + conftab[2, 2])
TNtrain <- conftab[1, 1]/(conftab[1, 1] + conftab[2, 1])
FPtrain <- conftab[2, 1]/(conftab[2, 1] + conftab[1, 1])
FNtrain <- conftab[1, 2]/(conftab[1, 1] + conftab[2, 1])
print(TPtrain)
print(TNtrain)
print(FPtrain)
print(FNtrain)
library(doBy)
summaryBy(goal + pledged + backers + usd.pledged + main_category + currency + country ~ binomState, data = KickTest, fun = c(mean,sd))
glmmodTest <- glm(binomState ~ goal + pledged + backers + usd.pledged + main_category + currency + country, data = KickTest, family = binomial)
summary(glmmodTest)
exp(glmmodTest$coefficients)
plot(glmmodTest)
glmTestProbs <- predict.glm(glmmodTest, type = "response")
hist(glmTestProbs)
glmTestPreds <- rep("Not Fail", nrow(KickTest))
glmTestPreds[glmTestProbs > 0.5] <- "Fail"
conftabTest <- table(glmTestPreds, true = KickTest$binomState)
print(conftabTest)
TPtest <- conftab[2, 2]/(conftab[1, 2] + conftab[2, 2])
TNtest <- conftab[1, 1]/(conftab[1, 1] + conftab[2, 1])
FPtest <- conftab[2, 1]/(conftab[2, 1] + conftab[1, 1])
FNtest <- conftab[1, 2]/(conftab[1, 1] + conftab[2, 1])
print(TPtest)
print(TNtest)
print(FPtest)
print(FNtest)
predictKickTrain <- predict(glmmodTrain, newdata = KickTrain, type = "response")
predictKickTrainMSE = mean((KickTrain$binomState - predictKickTrain)^2)
KickTrainMSE = mean((KickTrain$binomState - predictKickTrain)^2)
print(KickTrainMSE)
KickTrainLogisticMSE = mean((KickTrain$binomState - predictKickTrain)^2)
predictKickTrainLogistic <- predict(glmmodTrain, newdata = KickTrain, type = "response")
predictKickTrainLogistic <- predict(glmmodTrain, newdata = KickTrain, type = "response")
KickTrainLogisticMSE = mean((KickTrain$binomState - predictKickTrain)^2)
print(KickTrainLogisticMSE)
predictKickTestLogistic <- predict(glmmodTest, newdata = KickTest, type = "response")
KickTestLogisticMSE = mean((KickTest$binomState - predictKickTest)^2)
predictKickTrainLogistic <- predict(glmmodTrain, newdata = KickTrain, type = "response")
KickTrainLogisticMSE = mean((KickTrain$binomState - predictKickTrainLogistic)^2)
predictKickTestLogistic <- predict(glmmodTest, newdata = KickTest, type = "response")
KickTestLogisticMSE = mean((KickTest$binomState - predictKickTestLogistic)^2)
print(KickTrainLogisticMSE)
print(KickTestLogisticMSE)
predictKickTrainLogistic <- predict(glmmodTrain, newdata = KickTrain, type = "response")
KickTrainLogisticMSE = mean((KickTrain$binomState - predictKickTrainLogistic)^2)
predictKickTestLogistic <- predict(glmmodTest, newdata = KickTest, type = "response")
KickTestLogisticMSE = mean((KickTest$binomState - predictKickTestLogistic)^2)
print(KickTrainLogisticMSE)
print(KickTestLogisticMSE)
library('ISLR')
install.packages('factoextra')
install.packages('cluster')
library('factoextra')
library('cluster')
data("USArrests")
TPtest <- conftabtest[2, 2]/(conftabtest[1, 2] + conftabtest[2, 2])
#reads in data into KickStar
KickStar <- read.csv("/Users/ericv/Documents/Github/StatisticalModelsProject/ks-projects-201612.csv")
#removing a few columns with null values
KickStar <- subset(KickStar, select = -c(14,15,16,17))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$name),]
#colSums(is.na(KickStar))
#cleaning up category column
KickStar$category <- factor(KickStar$category, levels = c("Zines","Young Adult", "World Music", "Workshops" ,"Woodworking", "Webseries", "Webcomics", "Web","Weaving", "Wearables", "Video Games", "Video Art", "Video", "Vegan", "Typography", "Translations", "Thrillers", "Theater", "Textiles", "Television", "Technology", "Taxidermy", "Tabletop Games", "Stationery", "Spaces", "Space Exploration", "Sound", "Software", "Small Batch", "Shorts", "Sculpture", "Science Fiction", "Romance", "Rock", "Robots", "Restaurants", "Residencies", "Ready-to-wear", "Radio & Podcasts", "R&B", "Quilts", "Puzzles", "Punk", "Publishing", "Public Art", "Product Design", "Printing", "Print", "Pottery", "Pop", "Poetry", "Plays", "Playing Cards", "Places", "Photography", "Photobooks", "Photo", "Pet Fashion", "Periodicals", "Performances", "Performance Art", "People", "Painting", "Nonfiction", "Nature", "Narrative Film", "Musical", "Music Videos", "Music", "Movie Theaters", "Mobile Games", "Mixed Media", "Metal", "Makerspaces", "Live Games", "Literary Journals", "Letterpress", "Latin", "Knitting", "Kids", "Journalism", "Jewelry", "Jazz", "Interactive Design", "Installations", "Indie Rock", "Immersive", "Illustration", "Horror", "Hip-Hop", "Hardware", "Graphic Novels", "Graphic Design", "Glass", "Gaming Hardware", "Games", "Gadgets", "Footwear", "Food Trucks", "Food", "Flight", "Fine Art", "Film & Video", "Fiction", "Festivals", "Fashion", "Farms", "Farmer's Markets", "Fantasy", "Family", "Faith", "Fabrication Tools", "Experimental", "Events", "Embroidery", "Electronic Music", "Drinks", "Drama", "Documentary", "DIY Electronics", "DIY", "Digital Art", "Design", "Dance", "Crochet", "Crafts", "Couture", "Country & Folk", "Cookbooks", "Conceptual Art", "Community Gardens", "Comics", "Comic Books", "Comedy", "Classical Music", "Civic Design", "Chiptune", "Childrenswear", "Children's Books", "Ceramics", "Candles", "Camera Equipment", "Calendars", "Blues", "Bacon", "Audio", "Art Books", "Art", "Architecture", "Apps", "Apparel", "Anthologies", "Animation", "Animals", "Action", "Accessories", "Academic", "3D Printing"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$category),]
#colSums(is.na(KickStar))
#cleaning main_category column
#table(KickStar$main_category)
KickStar$main_category <- factor(KickStar$main_category, levels = c("Theater", "Technology", "Publishing", "Photography", "Music", "Journalism", "Games", "Food", "Film & Video", "Fashion", "Design", "Dance", "Crafts", "Comics", "Art"))
#colSums(is.na(KickStar))
#clearning currency column
#table(KickStar$currency)
KickStar$currency <- factor(KickStar$currency, levels = c("USD", "SGD", "SEK", "NZD", "NOK", "MXN", "HKD", "GBP", "EUR", "DKK", "CHF", "CAD", "AUD"))
#colSums(is.na(KickStar))
#cleaning goal column
KickStar$goal <- as.numeric(KickStar$goal)
#colSums(is.na(KickStar))
#cleaning pledge column
KickStar$pledged <- as.numeric(KickStar$pledged)
#cleaning state column
#table(KickStar$state)
KickStar$state <- factor(KickStar$state, levels = c("failed", "successful"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$state),]
#colSums(is.na(KickStar))
#cleaning backers column
KickStar$backers <- as.numeric(KickStar$backers)
#colSums(is.na(KickStar))
#cleaning country column
#table(KickStar$country)
KickStar$country <- factor(KickStar$country, levels = c("US", "SG", "SE", "NZ", "NO", "NL", "MX", "LU", "IT", "IE", "HK", "GB", "FR", "ES", "DK", "DE", "CH", "CA", "BE", "AU", "AT"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$country),]
#colSums(is.na(KickStar))
#cleaning usd.pledged column
KickStar$usd.pledged <- as.numeric(KickStar$usd.pledged)
#colSums(is.na(KickStar))
#creates deadline and launched variable so its just year/month/day
KickStar$newDeadline <- as.Date(as.POSIXlt(KickStar$deadline, origin = "1582-10-14",tz = "GMT"))
KickStar$newLaunched <- as.Date(as.POSIXlt(KickStar$launched, origin = "1582-10-14",tz = "GMT"))
#if successful, then 1, else 0
KickStar$binomState <- ifelse(KickStar$state == "successful",1,0)
#gets summary of data
summary(KickStar)
#reads in data into KickStar
KickStar <- read.csv("/Users/ericv/Documents/Github/StatisticalModelsProject/ks-projects-201612.csv")
#set seed
set.seed(1861)
#removing a few columns with null values
KickStar <- subset(KickStar, select = -c(14,15,16,17))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$name),]
#colSums(is.na(KickStar))
#cleaning up category column
KickStar$category <- factor(KickStar$category, levels = c("Zines","Young Adult", "World Music", "Workshops" ,"Woodworking", "Webseries", "Webcomics", "Web","Weaving", "Wearables", "Video Games", "Video Art", "Video", "Vegan", "Typography", "Translations", "Thrillers", "Theater", "Textiles", "Television", "Technology", "Taxidermy", "Tabletop Games", "Stationery", "Spaces", "Space Exploration", "Sound", "Software", "Small Batch", "Shorts", "Sculpture", "Science Fiction", "Romance", "Rock", "Robots", "Restaurants", "Residencies", "Ready-to-wear", "Radio & Podcasts", "R&B", "Quilts", "Puzzles", "Punk", "Publishing", "Public Art", "Product Design", "Printing", "Print", "Pottery", "Pop", "Poetry", "Plays", "Playing Cards", "Places", "Photography", "Photobooks", "Photo", "Pet Fashion", "Periodicals", "Performances", "Performance Art", "People", "Painting", "Nonfiction", "Nature", "Narrative Film", "Musical", "Music Videos", "Music", "Movie Theaters", "Mobile Games", "Mixed Media", "Metal", "Makerspaces", "Live Games", "Literary Journals", "Letterpress", "Latin", "Knitting", "Kids", "Journalism", "Jewelry", "Jazz", "Interactive Design", "Installations", "Indie Rock", "Immersive", "Illustration", "Horror", "Hip-Hop", "Hardware", "Graphic Novels", "Graphic Design", "Glass", "Gaming Hardware", "Games", "Gadgets", "Footwear", "Food Trucks", "Food", "Flight", "Fine Art", "Film & Video", "Fiction", "Festivals", "Fashion", "Farms", "Farmer's Markets", "Fantasy", "Family", "Faith", "Fabrication Tools", "Experimental", "Events", "Embroidery", "Electronic Music", "Drinks", "Drama", "Documentary", "DIY Electronics", "DIY", "Digital Art", "Design", "Dance", "Crochet", "Crafts", "Couture", "Country & Folk", "Cookbooks", "Conceptual Art", "Community Gardens", "Comics", "Comic Books", "Comedy", "Classical Music", "Civic Design", "Chiptune", "Childrenswear", "Children's Books", "Ceramics", "Candles", "Camera Equipment", "Calendars", "Blues", "Bacon", "Audio", "Art Books", "Art", "Architecture", "Apps", "Apparel", "Anthologies", "Animation", "Animals", "Action", "Accessories", "Academic", "3D Printing"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$category),]
#colSums(is.na(KickStar))
#cleaning main_category column
#table(KickStar$main_category)
KickStar$main_category <- factor(KickStar$main_category, levels = c("Theater", "Technology", "Publishing", "Photography", "Music", "Journalism", "Games", "Food", "Film & Video", "Fashion", "Design", "Dance", "Crafts", "Comics", "Art"))
#colSums(is.na(KickStar))
#clearning currency column
#table(KickStar$currency)
KickStar$currency <- factor(KickStar$currency, levels = c("USD", "SGD", "SEK", "NZD", "NOK", "MXN", "HKD", "GBP", "EUR", "DKK", "CHF", "CAD", "AUD"))
#colSums(is.na(KickStar))
#cleaning goal column
KickStar$goal <- as.numeric(KickStar$goal)
#colSums(is.na(KickStar))
#cleaning pledge column
KickStar$pledged <- as.numeric(KickStar$pledged)
#cleaning state column
#table(KickStar$state)
KickStar$state <- factor(KickStar$state, levels = c("failed", "successful"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$state),]
#colSums(is.na(KickStar))
#cleaning backers column
KickStar$backers <- as.numeric(KickStar$backers)
#colSums(is.na(KickStar))
#cleaning country column
#table(KickStar$country)
KickStar$country <- factor(KickStar$country, levels = c("US", "SG", "SE", "NZ", "NO", "NL", "MX", "LU", "IT", "IE", "HK", "GB", "FR", "ES", "DK", "DE", "CH", "CA", "BE", "AU", "AT"))
#colSums(is.na(KickStar))
KickStar<- KickStar[!is.na(KickStar$country),]
#colSums(is.na(KickStar))
#cleaning usd.pledged column
KickStar$usd.pledged <- as.numeric(KickStar$usd.pledged)
#colSums(is.na(KickStar))
#creates deadline and launched variable so its just year/month/day
KickStar$newDeadline <- as.Date(as.POSIXlt(KickStar$deadline, origin = "1582-10-14",tz = "GMT"))
KickStar$newLaunched <- as.Date(as.POSIXlt(KickStar$launched, origin = "1582-10-14",tz = "GMT"))
#if successful, then 1, else 0
KickStar$binomState <- ifelse(KickStar$state == "successful",1,0)
#gets summary of data
summary(KickStar)
trainSize <- 0.75
trainInd <- sample(1:nrow(KickStar), size = floor(nrow(KickStar) * trainSize))
KickTrain <- KickStar[trainInd, ]
KickTest <- KickStar[-trainInd, ]
table(KickStar$main_category)
```
table(KickStar$main_category)
##Using the training data to create a model
###Find summary statistics when the Kickstarter succeed (1) or did not (0)
```{r}
table(KickStar$main_category)
##Using the training data to create a model
###Find summary statistics when the Kickstarter succeed (1) or did not (0)
library(doBy)
summaryBy(goal + pledged + backers + currency ~ binomState, data = KickTrain, fun = c(mean,sd))
glmmodTrain <- glm(binomState ~ goal + pledged + backers + currency, data = KickTrain, family = binomial)
summary(glmmodTrain)
library(randomForest)
randFor <- randomForest(formula = mpg ~ .-name, data = KickTrain, mtry = 3)
library(randomForest)
randFor <- randomForest(formula = binomState ~ goal + pledged + backers + currency, data = KickTrain, mtry = 3)
library(randomForest)
randFor <- randomForest(formula = binomState ~ goal + pledged + backers + currency, data = KickTrain, mtry = 3)
